package main

import (
	"database/sql/driver"
	"encoding/json"
	"errors"
	"fmt"
	"github.com/forPelevin/gomoji"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/joho/godotenv"
	"gorm.io/driver/mysql"
	"gorm.io/gorm"
	"log"
	"os"
	"strconv"
	"strings"
)

const StatusAccepted = 3
const StatusDeclined = 4
const StatusWaiting = 5
const StatusBanned = 7

const (
	stateInitial   = 0
	stateName      = 1
	stateCity      = 2
	stateCar       = 3
	stateEngine    = 4
	statePhoto     = 5
	stateCompleted = 6
)

const (
	statusNew      = 0
	statusWaiting  = 1
	statusAccepted = 2
	statusRejected = 3
	statusBanned   = 4
)

const (
	callbackAccept = "accept_request"
	callbackReject = "reject_request"
	callbackBanned = "fuck_off_dog"
)

const parseModeHTMl = "HTML"

/** –í–æ–ø—Ä–æ—Å—ã */
const (
	askUserName   = "–Ø–∫ —Ç–µ–±–µ –∑–≤–∞—Ç–∏?"
	askUserCity   = "–ó —è–∫–æ–≥–æ —Ç–∏ –º—ñ—Å—Ç–∞?"
	askUserCar    = "–Ø–∫–µ –≤ —Ç–µ–±–µ –∞–≤—Ç–æ?"
	askUserEngine = "–Ø–∫–∏–π –¥–≤–∏–≥—É–Ω?"
	askUserPhoto  = "–ù–∞–¥—ñ–π—à–ª–∏ —Ñ–æ—Ç–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è, —â–æ–± –±—É–ª–æ –≤–∏–¥–Ω–æ –¥–µ—Ä–∂–∞–≤–Ω–∏–π –Ω–æ–º–µ—Ä –∞–≤—Ç–æ - –ø—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–Ω–∏ ¬´–ì–û–¢–û–í–û¬ª\n–Ø–∫—â–æ –≤–≤–∞–∂–∞—î—à –∑–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–µ –ø—Ä–∏—Ö–æ–≤–∞—Ç–∏ –Ω–æ–º–µ—Ä–Ω–∏–π –∑–Ω–∞–∫ - —Ü–µ —Ç–≤–æ—î –ø—Ä–∞–≤–æ, –∞–ª–µ –º–∏ –ø–æ–≤–∏–Ω–Ω—ñ —Ä–æ–∑—É–º—ñ—Ç–∏, —â–æ —Ç–∏ –∑ –£–∫—Ä–∞—ó–Ω–∏ —Ç–∞ —Ç–æ–±—ñ –º–æ–∂–Ω–∞ –¥–æ–≤—ñ—Ä—è—Ç–∏."
)

type StringArray []string

type User struct {
	gorm.Model
	TelegramID int64 `gorm:"unique_index"`
	Name       string
	City       string
	Car        string
	Engine     string
	Photos     StringArray `gorm:"type:json"`
	State      int
	Status     int
}

// todo –°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–æ–≥–æ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç –≤ –æ—Ç–≤–µ—Ç–µ, —á—Ç–æ –±—ã —Ç–µ–∫—Å—Ç –±—ã–ª —Ç–µ–∫—Å—Ç–æ–º, –Ω–µ —Å—Ç–∏–∫–µ—Ä –∏–ª–∏ —ç–º–æ–¥–∑–∏!!! –ò–Ω–∞—á–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–∞ —à–∞–≥ –Ω–∞–∑–∞–¥
// todo –°–¥–µ–ª–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ª–∏–±–æ –æ—Ç–∫–ª–æ–Ω—è—Ç—å –∑–∞—è–≤–∫–∏

//// Request –°—É—â–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//type Request struct {
//	Id     int
//	ChatId int64
//	Status int
//	Step   int
//}

func main() {
	if err := godotenv.Load(); err != nil {
		log.Print("No .env file found")
	}

	//Token := os.Getenv("TOKEN")
	adminChatId, _ := strconv.ParseInt(os.Getenv("OWNER_ACC"), 10, 64)
	SupergroupF30Id, _ := strconv.ParseInt(os.Getenv("SUPERGROUP_F30_ID"), 10, 64)
	//DSN := os.Getenv("DSN")

	db, err := gorm.Open(mysql.Open(os.Getenv("DSN")), &gorm.Config{})
	if err != nil {
		panic("failed to connect database")
	}

	//// Create the 'users' table if it does not exist
	//if !db.Ta(&User{}) {
	//	db.CreateTable(&User{})
	//}

	db.AutoMigrate(&User{})

	bot, err := tgbotapi.NewBotAPI(os.Getenv("TOKEN"))
	if err != nil {
		log.Fatal(err)
	}

	log.Printf("Authorized on account %s", bot.Self.UserName)

	updateConfig := tgbotapi.NewUpdate(0)
	updateConfig.Timeout = 60

	updates := bot.GetUpdatesChan(updateConfig)

	// –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
	//answer1 := ""
	//answer2 := ""
	//answer3 := ""
	//answer4 := ""

	// todo —á—Ç–æ —Ç–æ —Å–¥–µ–ª–∞—Ç—å —Å —ç—Ç–∏–º–∏ —Å—Å—ã–ª–∫–∞–º–∏ –≤ —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–∞—Ö
	userReplyPlease := "–ë—É–¥—å –ª–∞—Å–∫–∞, –¥–∞–π –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –ø–∏—Ç–∞–Ω–Ω—è –≤–∏—â–µ!"
	userWelcomeMsg := "–ü—Ä–∏–≤—ñ—Ç, –∑–∞—Ä–∞–∑ —è –ø–æ—Å—Ç–∞–≤–ª—é —Ç–æ–±—ñ –∫—ñ–ª—å–∫–∞ –∑–∞–ø–∏—Ç–∞–Ω—å!"
	userAlreadyDoneMsg := "–í–∞—à–∞ –∑–∞—è–≤–∫—É –≤–∂–µ –±—É–ª–æ —Ä–æ–∑–≥–ª—è–Ω—É—Ç–æ, —è–∫—â–æ –≤–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è - –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—î—é. @fclubkyiv"
	userWaitingMsg := "–ù–∞—Ä–∞–∑—ñ –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–æ–∑–≥–ª—è–¥—ñ, —è–∫—â–æ –≤–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è - –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—î—é. @fclubkyiv"
	userRejectMsg := "–í–∞—à—É –∑–∞—è–≤–∫—É –±—É–ª–æ –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ, –¥–ª—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—î—é. @fclubkyiv"
	userDoneReguestMsg := "–î—è–∫—É—î–º–æ, –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —á–∞—Ç. –Ø–∫—â–æ –ø—Ä–æ—Ç—è–≥–æ–º —Ç—Ä–∏–≤–∞–ª–æ–≥–æ —á–∞—Å—É –≤–∏ –Ω–µ –æ—Ç—Ä–∏–º–∞–ª–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è - –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—î—é - @fclubkyiv."
	userBannedMsg := "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—É–ª–∞ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∞, —è–∫—â–æ –≤–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è - –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—î—é. @fclubkyiv"

	// –ö–Ω–æ–ø–∫–∞ –≥–æ—Ç–æ–≤–æ
	var doneButton = tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("–ì–æ—Ç–æ–≤–æüëå"),
		),
	)

	// –ö–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
	var requestButtons = tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ü—Ä–∏–π–Ω—è—Ç–∏", "accept_request"),
			tgbotapi.NewInlineKeyboardButtonData("–í—ñ–¥—Ö–∏–ª–∏—Ç–∏", "reject_request"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –æ—Ä–∫–∞", "fuck_off_dog"),
		),
	)

	// test git branches
	for update := range updates {
		if update.Message != nil { // If we got a message
			// –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –µ—Å–ª–∏ –æ–Ω–∏ –≤ –∏–∑ —Å—É–ø–µ—Ä—á–∞—Ç–∞
			if update.Message.Chat.ID == SupergroupF30Id {
				continue
			}

			user, err := getUser(db, update.Message.Chat.ID)
			if err != nil {
				log.Println("Error getting user:", err)
				return
			}

			// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
			switch user.Status {
			case statusAccepted:
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, userAlreadyDoneMsg)
				msg.ParseMode = parseModeHTMl
				bot.Send(msg)
			case statusRejected:
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, userRejectMsg)
				msg.ParseMode = parseModeHTMl
				bot.Send(msg)
			case statusBanned:
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, userBannedMsg)
				msg.ParseMode = parseModeHTMl
				bot.Send(msg)
			case statusWaiting:
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, userWaitingMsg)
				msg.ParseMode = parseModeHTMl
				bot.Send(msg)
			case statusNew:
				switch user.State {
				case stateInitial:
					msg := tgbotapi.NewMessage(update.Message.Chat.ID, "")
					msg.Text = userWelcomeMsg
					bot.Send(msg)
					msg.Text = askUserName
					bot.Send(msg)
					user.State = stateName
					updateUser(db, user)
				case stateName:
					update.Message.Text = gomoji.RemoveEmojis(update.Message.Text)
					userMsg := tgbotapi.NewMessage(update.Message.Chat.ID, "")
					if update.Message.Text == "" {
						// –ï—Å–ª–∏ –Ω–µ –æ—Ç–≤–µ—Ç –Ω–µ –ø—Ä–∏—à–µ–ª –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –ø—Ä–æ—Å–∏–º –µ—â—ë —Ä–∞–∑ –æ—Ç–≤–µ—Ç–∏—Ç—å
						userMsg.Text = userReplyPlease
						bot.Send(userMsg)
						// todo –Ω–µ —É–≤–µ—Ä–µ–Ω —á—Ç–æ —Ç—É—Ç –Ω—É–∂–Ω–æ continue
						continue
					}

					// todo –≤ –∫–∞–∂–¥–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω—É–∂–Ω–æ —É–±–∏—Ä–∞—Ç—å —Å–º–∞–π–ª—ã –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–µ –ø—É—Å—Ç–∞—è –ª–∏ —Å—Ç—Ä–æ–∫–∞
					// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
					user.Name = update.Message.Text
					userMsg.Text = askUserCity
					bot.Send(userMsg)

					// –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
					user.State = stateCity
					updateUser(db, user)
				case stateCity:
					update.Message.Text = gomoji.RemoveEmojis(update.Message.Text)
					userMsg := tgbotapi.NewMessage(update.Message.Chat.ID, "")
					if update.Message.Text == "" {
						// –ï—Å–ª–∏ –Ω–µ –æ—Ç–≤–µ—Ç –Ω–µ –ø—Ä–∏—à–µ–ª –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –ø—Ä–æ—Å–∏–º –µ—â—ë —Ä–∞–∑ –æ—Ç–≤–µ—Ç–∏—Ç—å
						userMsg.Text = userReplyPlease
						bot.Send(userMsg)
						// todo –Ω–µ —É–≤–µ—Ä–µ–Ω —á—Ç–æ —Ç—É—Ç –Ω—É–∂–Ω–æ continue
						continue
					}

					// todo –≤ –∫–∞–∂–¥–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω—É–∂–Ω–æ —É–±–∏—Ä–∞—Ç—å —Å–º–∞–π–ª—ã –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–µ –ø—É—Å—Ç–∞—è –ª–∏ —Å—Ç—Ä–æ–∫–∞
					// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
					user.City = update.Message.Text
					userMsg.Text = askUserCar
					bot.Send(userMsg)

					// –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
					user.State = stateCar
					updateUser(db, user)
				case stateCar:
					update.Message.Text = gomoji.RemoveEmojis(update.Message.Text)
					userMsg := tgbotapi.NewMessage(update.Message.Chat.ID, "")
					if update.Message.Text == "" {
						// –ï—Å–ª–∏ –Ω–µ –æ—Ç–≤–µ—Ç –Ω–µ –ø—Ä–∏—à–µ–ª –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –ø—Ä–æ—Å–∏–º –µ—â—ë —Ä–∞–∑ –æ—Ç–≤–µ—Ç–∏—Ç—å
						userMsg.Text = userReplyPlease
						bot.Send(userMsg)
						// todo –Ω–µ —É–≤–µ—Ä–µ–Ω —á—Ç–æ —Ç—É—Ç –Ω—É–∂–Ω–æ continue
						continue
					}

					// todo –≤ –∫–∞–∂–¥–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω—É–∂–Ω–æ —É–±–∏—Ä–∞—Ç—å —Å–º–∞–π–ª—ã –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–µ –ø—É—Å—Ç–∞—è –ª–∏ —Å—Ç—Ä–æ–∫–∞
					// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
					user.Car = update.Message.Text
					userMsg.Text = askUserEngine
					bot.Send(userMsg)

					// –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
					user.State = stateEngine
					updateUser(db, user)
				case stateEngine:
					update.Message.Text = gomoji.RemoveEmojis(update.Message.Text)
					userMsg := tgbotapi.NewMessage(update.Message.Chat.ID, "")
					if update.Message.Text == "" {
						// –ï—Å–ª–∏ –Ω–µ –æ—Ç–≤–µ—Ç –Ω–µ –ø—Ä–∏—à–µ–ª –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –ø—Ä–æ—Å–∏–º –µ—â—ë —Ä–∞–∑ –æ—Ç–≤–µ—Ç–∏—Ç—å
						userMsg.Text = userReplyPlease
						bot.Send(userMsg)
						// todo –Ω–µ —É–≤–µ—Ä–µ–Ω —á—Ç–æ —Ç—É—Ç –Ω—É–∂–Ω–æ continue
						continue
					}

					// todo –≤ –∫–∞–∂–¥–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω—É–∂–Ω–æ —É–±–∏—Ä–∞—Ç—å —Å–º–∞–π–ª—ã –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–µ –ø—É—Å—Ç–∞—è –ª–∏ —Å—Ç—Ä–æ–∫–∞
					// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
					user.Engine = update.Message.Text
					userMsg.Text = askUserPhoto
					bot.Send(userMsg)

					// –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
					user.State = statePhoto
					updateUser(db, user)
				case statePhoto:
					if update.Message.Photo != nil && len(update.Message.Photo) > 0 {
						// –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ –∏–∑ —Å–ª–∞–π—Å–∞
						photoID := (update.Message.Photo)[1].FileID

						// –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –≤ —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
						user.Photos = append(user.Photos, photoID)

						// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
						msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–§–æ—Ç–æ –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ, –∑–∞–≤–∞–Ω—Ç–∞–∂ —â–µ, –∞–±–æ –Ω–∞—Ç–∏—Å–Ω–∏ <b>–ì–æ—Ç–æ–≤–æ</b>.")
						msg.ParseMode = parseModeHTMl
						msg.ReplyMarkup = doneButton
						bot.Send(msg)

						// –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
						updateUser(db, user)
					} else if update.Message.Text == "–ì–æ—Ç–æ–≤–æüëå" {
						// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Ö–æ—Ç—å –æ–¥–Ω–æ —Ñ–æ—Ç–æ
						if len(user.Photos) == 0 {
							// –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
							msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–í–∏ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–∏ –∂–æ–¥–Ω–æ–≥–æ —Ñ–æ—Ç–æ!")
							msg.ReplyMarkup = doneButton
							bot.Send(msg)
							return
						}

						// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
						adminMsgText := fmt.Sprintf(
							"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –î–∞–Ω–Ω—ã–µ:\n\n"+
								"–ò–º—è: %s\n"+
								"–ì–æ—Ä–æ–¥: %s\n"+
								"–ê–≤—Ç–æ–º–æ–±–∏–ª—å: %s\n"+
								"–î–≤–∏–≥–∞—Ç–µ–ª—å: %s\n"+
								"ChatID: %d",
							user.Name,
							user.City,
							user.Car,
							user.Engine,
							update.Message.From.ID)

						// –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
						adminMsg := tgbotapi.NewMessage(adminChatId, adminMsgText)
						adminMsg.ReplyMarkup = requestButtons
						bot.Send(adminMsg)

						// –§–æ—Ä–º–∏—Ä—É–µ–º –≥–∞–ª–µ—Ä–µ—é —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º
						files := make([]interface{}, len(user.Photos))
						caption := fmt.Sprintf("ChatID: %d", update.Message.Chat.ID)
						for i, s := range user.Photos {
							if i == 0 {
								photo := tgbotapi.InputMediaPhoto{
									BaseInputMedia: tgbotapi.BaseInputMedia{
										Type:            "photo",
										Media:           tgbotapi.FileID(s),
										Caption:         caption,
										ParseMode:       "",
										CaptionEntities: nil,
									}}
								files[i] = photo
							} else {
								files[i] = tgbotapi.NewInputMediaPhoto(tgbotapi.FileID(s))
							}
						}
						cfg := tgbotapi.NewMediaGroup(
							adminChatId,
							files,
						)

						if _, err := bot.SendMediaGroup(cfg); err != nil {
							log.Panic(err)
						}

						// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
						msg := tgbotapi.NewMessage(update.Message.Chat.ID, userDoneReguestMsg)
						msg.ReplyMarkup = tgbotapi.NewRemoveKeyboard(true)
						bot.Send(msg)

						// –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
						user.State = stateCompleted
						user.Status = statusWaiting
						user.Photos = nil
						updateUser(db, user)
					} else {
						// –ü—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ
						msg := tgbotapi.NewMessage(update.Message.Chat.ID, askUserPhoto)
						bot.Send(msg)
					}
				}
			}
		} else if update.CallbackQuery != nil {
			// —Ä–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤–∏—Å—è—Ç –∫–Ω–æ–ø–∫–∏ (—Å–∞–º–∞ –∑–∞—è–≤–∫–∞ –∞–¥–º–∏–Ω–∞) –Ω–∞ –º–∞—Å—Å–∏–≤
			s := strings.Fields(update.CallbackQuery.Message.Text)

			// –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –±—É–¥–µ—Ç chat_id (string)
			strUserID := s[len(s)-1]

			// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ –∏ –ø–æ–ª—É—á–∞–µ–º —á–∏—Å–ª–æ–≤–æ–π `chat_id` –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ –∑–∞—è–≤–∫—É
			userChatID, _ := strconv.ParseInt(strUserID, 10, 64)

			user, err := getUser(db, userChatID)
			if err != nil {
				log.Println("Error getting user:", err)
				return
			}

			adminMsg := tgbotapi.NewMessage(adminChatId, "")
			switch user.Status {
			case statusAccepted:
				adminMsg.Text = fmt.Sprintf("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –±—É–≤ —Ä–æ–∑–≥–ª—è–Ω—É—Ç–∏–π! \n –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ ID: %d - <b>–ü—Ä–∏–π–Ω—è—Ç–æ</b>.", userChatID)
				adminMsg.ParseMode = parseModeHTMl
				bot.Send(adminMsg)
				// todo –Ω–µ —É–≤–µ—Ä–µ–Ω —á—Ç–æ –Ω—É–∂–Ω–æ `continue`
				continue
			case statusRejected:
				adminMsg.Text = fmt.Sprintf("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –±—É–≤ —Ä–æ–∑–≥–ª—è–Ω—É—Ç–∏–π! \n –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ ID: %d - <b>–í—ñ–¥—Ö–∏–ª–µ–Ω–æ</b>.", userChatID)
				adminMsg.ParseMode = parseModeHTMl
				bot.Send(adminMsg)
				// todo –Ω–µ —É–≤–µ—Ä–µ–Ω —á—Ç–æ –Ω—É–∂–Ω–æ `continue`
				continue
			case statusBanned:
				adminMsg.Text = fmt.Sprintf("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –±—É–≤ —Ä–æ–∑–≥–ª—è–Ω—É—Ç–∏–π! \n –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ ID: %d - <b>–ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ</b>.", userChatID)
				adminMsg.ParseMode = parseModeHTMl
				bot.Send(adminMsg)
				// todo –Ω–µ —É–≤–µ—Ä–µ–Ω —á—Ç–æ –Ω—É–∂–Ω–æ `continue`
				continue
			case statusWaiting:
				// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–ª–±–µ–∫–∞
				callback := tgbotapi.NewCallback(update.CallbackQuery.ID, update.CallbackQuery.Data)
				userMsg := tgbotapi.NewMessage(userChatID, "")
				// todo –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤—ã—à–µ —É–∂–µ –æ–±—ä—è–≤–ª–µ–Ω–∞
				adminMsg := tgbotapi.NewMessage(adminChatId, "")

				// –î–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∞ –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ –∑–∞—è–≤–∫–µ
				switch callback.Text {
				case callbackAccept:
					// –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
					inviteLinkConfig := tgbotapi.CreateChatInviteLinkConfig{
						ChatConfig: tgbotapi.ChatConfig{
							ChatID: SupergroupF30Id,
						},
						Name:               "–ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≥—Ä—É–ø—É",
						ExpireDate:         0,
						MemberLimit:        1,
						CreatesJoinRequest: false,
					}

					// todo –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω—É—é –æ—à–∏–±–∫—É –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
					// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –ø–æ –∫–æ–Ω—Ñ–∏–≥—É
					resp, _ := bot.Request(inviteLinkConfig)
					// –°–æ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ —Å—ã—Ä—ã—Ö –±–∞–π—Ç —Å –æ—Ç–≤–µ—Ç–∞
					data := []byte(resp.Result)
					// –°–æ–∑–¥–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä —Ç–∏–ø–∞ ChatInviteLink –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –µ–≥–æ –æ—Ç–≤–µ—Ç–æ–º
					var chatInviteLink tgbotapi.ChatInviteLink
					// –†–∞—Å–ø–∞—Ä—Å–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç –≤ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –≤—ã—à–µ —ç–∫–∑–µ–º–ø–ª—è—Ä —Ç–∏–ø–∞ ChatInviteLink
					_ = json.Unmarshal(data, &chatInviteLink)

					// todo –±–æ—Ç –¥–æ–ª–∂–µ–Ω —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É, –¥–ª—è 1 —á–µ–ª–æ–≤–µ–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –µ—ë –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
					userMsg.Text = "–ü—Ä–∏–≤—ñ—Ç!\n–¢–≤–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ —Å—Ç–æ—Å–æ–≤–Ω–æ –≤—Å—Ç—É–ø—É –≤ <b>F-club Kyiv</b> –±—É–ª–∏ –æ–±—Ä–æ–±–ª–µ–Ω—ñ –Ω–∞—à–æ—é –∫–æ–º–∞–Ω–¥–æ—é. –û–∑–Ω–∞–π–æ–º—Å—è –∑ –ø—Ä–æ—Å—Ç–∏–º–∏ —É–º–æ–≤–∞–º–∏ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –≤ –Ω–∞—à–æ–º—É –∫–ª—É–±—ñ —Ç–∞ –ø—Ä–∏—î–¥–Ω—É–π—Å—è –¥–æ –Ω–∞—Å! \n\n1. –ü–æ–≤–∞–∂–∞–π —ñ–Ω—à–∏—Ö —É—á–∞—Å–Ω–∏–∫—ñ–≤. –ù–µ—Ü–µ–Ω–∑—É—Ä–Ω–∞ –ª–∞–π–∫–∞, —Ü—å–∫—É–≤–∞–Ω–Ω—è, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –Ω–µ–ø—Ä–∏—Å—Ç–æ–π–Ω–∏—Ö —Å—Ç—ñ–∫–µ—Ä—ñ–≤ - –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ(–∞–ª–µ —è–∫—â–æ —Ü–µ –≤ —Ç–µ–º—É, —Ç–æ –≤—Å—ñ —Ä–æ–∑—É–º—ñ—é—Ç—åüòÇ)\n2. –ù–µ –≤–ª–∞—à—Ç–æ–≤—É—î–º–æ ¬´–ë–∞—Ä–∞—Ö–æ–ª–∫—É¬ª! –¢–∏ –º–æ–∂–µ—à—å –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏, —è–∫—â–æ –≤ —Ç–µ–±–µ —î —â–æ—Å—å –∫–æ—Ä–∏—Å–Ω–µ –¥–ª—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—è, —á–∏ –±—É–¥—å —â–æ, –∞–ª–µ –Ω–µ —Ç—Ä–µ–±–∞ –ø—Ä–æ —Ü–µ –ø–∏—Å–∞—Ç–∏ –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è —ñ —Ä–æ–±–∏—Ç–∏ —Ä–µ–∫–ª–∞–º–Ω—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è. \n3. –Ø–∫—â–æ —Ç–∏ —Ö–æ—á–µ—à –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ —Å–≤–æ—ó –ø–æ—Å–ª—É–≥—É(—Å—Ç–æ, –¥–µ—Ç–µ–π–ª—ñ–Ω–≥, –∞–≤—Ç–æ–º–∏–π–∫–∏, –∏—Ç–¥) - –ø–æ–≤—ñ–¥–æ–º –ø—Ä–æ —Ü–µ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó —ñ –∑—Ä–æ–±—ñ—Ç—å –≥–∞—Ä–Ω–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Ä–∞–∑–æ–º - —Ü–µ –≤—Å–µ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ !! \n 4. –ú–∏ —Ä–æ–∑—É–º—ñ—î–º–æ, —â–æ –∑–∞—Ä–∞–∑ –±–µ–∑ —Ü—å–æ–≥–æ –Ω—ñ—è–∫, –∞–ª–µ –º–∞—î–º–æ –ø—Ä–æ —Ü–µ –ø–æ–ø—Ä–æ—Å–∏—Ç–∏ - —è–∫–æ–º–æ–≥–∞ –º–µ–Ω—à–µ —Å—É–ø–µ—Ä–µ—á–æ–∫ —Å—Ç–æ—Å–æ–≤–Ω–æ –ø–æ–ª—ñ—Ç–∏–∫–∏. –ú–∏ –≤—Å—ñ –ø—ñ–¥—Ç—Ä–∏–º—É—î–º–æ –£–∫—Ä–∞—ó–Ω—É —ñ –Ω–µ —à—É–∫–∞—î–º–æ –∑—Ä–∞–¥–∏!\n 5. –°—Ç–æ—Å–æ–≤–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è GIF , –º–∏ –Ω–µ –ø—Ä–æ—Ç–∏ —Ü—å–æ–≥–æ, –∞–ª–µ –Ω–µ —Ç—Ä–µ–±–∞ –ø–æ—Å—Ç–∏—Ç–∏ –¥—É–∂–µ –±–∞–≥–∞—Ç–æ, –æ–¥–∏–Ω –∑–∞ –æ–¥–Ω–∏–º! \n 6. –ú–∞–π –ø–æ–≤–∞–≥—É –¥–æ —ñ–Ω—à–∏—Ö –≤–ª–∞—Å–Ω–∏–∫—ñ–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤, –Ω–µ —É –∫–æ–∂–Ω–æ–≥–æ —Ç–∞–∫–∞ –≥–∞—Ä–Ω–∞ –º–∞—à–∏–Ω–∞, —è–∫ –≤ —Ç–µ–±–µ!  \n\n–ú–∞—î—à –±–∞–∂–∞–Ω–Ω—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–ª—É–±–Ω–∏–π —Å—Ç—ñ–∫–µ—Ä –Ω–∞ –∞–≤—Ç–æ —á–∏ –Ω–æ–º–µ—Ä–Ω—É —Ä–∞–º–∫—É - –≤—ñ–¥–ø–∏—à–∏ –Ω–∞ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è\U0001FAE1\n\n–¢—Ä–∏–º–∞–π –ø–æ—Å–∏–ª–∞–Ω–Ω—è, –¥–ª—è –≤—Å—Ç—É–ø—É –≤ —á–∞—Ç!\n     P.s.–ù–µ –∑–∞–±—É–¥—å –ø—Ä–∏–≤—ñ—Ç–∞—Ç–∏—Å—è –∑ –Ω–æ–≤–∏—Ö —Ç–æ–≤–∞—Ä–∏—à–∞–º–∏, —Ç–∞ —Ä–æ–∑–ø–æ–≤—ñ—Å—Ç–∏ —è–∫–∏–π –≤ —Ç–µ–±–µ –∞–≤—Ç–æ–º–æ–±—ñ–ª—å!\n\n\n\n–î–æ–Ω–∞—Ç–∏ –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É!(–ó–∞ –±–∞–∂–∞–Ω–Ω—è–º) \n\nF-Club Kyiv \n\nüéØ–¶—ñ–ª—å: 100 000.00 ‚Ç¥\n\nüîó–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –±–∞–Ω–∫—É\nhttps://send.monobank.ua/jar/S87zLF6xL\n\nüí≥–ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏ –±–∞–Ω–∫–∏\n5375 4112 0304 9692"
					userMsg.ParseMode = parseModeHTMl
					bot.Send(userMsg)

					userMsg.Text = fmt.Sprintf("–û—Å—å –≤–∞—à–µ <a href=\"%s\">%s</a>", chatInviteLink.InviteLink, chatInviteLink.Name)
					userMsg.ParseMode = parseModeHTMl
					bot.Send(userMsg)

					// todo –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø—Ä–∏–Ω—è—Ç—å –≤ –≥—Ä—É–ø–ø—É)
					user.Status = statusAccepted
					updateUser(db, user)

					// –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
					adminMsg.Text = fmt.Sprintf("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ <b>ChatID: %d</b> –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ, –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—Å—Ç—É–ø –¥–æ –≥—Ä—É–ø–∏ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!", userChatID)
					adminMsg.ParseMode = parseModeHTMl
					bot.Send(adminMsg)
				case callbackReject:
					// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
					user.Status = statusRejected
					updateUser(db, user)

					// –û—Ç—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
					userMsg.Text = userRejectMsg
					userMsg.ParseMode = parseModeHTMl
					bot.Send(userMsg)

					// todo –≤—ã–Ω–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É
					// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
					adminMsg.Text = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –±—É–≤ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥—Ö–∏–ª–µ–Ω–∏–π!"
					bot.Send(adminMsg)
				case callbackBanned:
					// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
					user.Status = statusBanned
					updateUser(db, user)

					// –û—Ç—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
					userMsg.Text = userBannedMsg
					userMsg.ParseMode = parseModeHTMl
					bot.Send(userMsg)

					// todo –≤—ã–Ω–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É
					// todo –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤—ã—à–µ —É–∂–µ –æ–±—ä—è–≤–ª–µ–Ω–∞
					// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
					adminMsg.Text = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –±—É–≤ —É—Å–ø—ñ—à–Ω–æ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–Ω–∏–π!"
					bot.Send(adminMsg)
				}
			}
		}
	}
}

func (a StringArray) Value() (driver.Value, error) {
	return json.Marshal(a)
}

func (a *StringArray) Scan(value interface{}) error {
	b, ok := value.([]byte)
	if !ok {
		return fmt.Errorf("failed to unmarshal StringArray value: %v", value)
	}

	return json.Unmarshal(b, &a)
}

func getUser(db *gorm.DB, telegramID int64) (*User, error) {
	var user User
	if err := db.Where("telegram_id = ?", telegramID).First(&user).Error; err != nil {
		if errors.Is(err, gorm.ErrRecordNotFound) {
			user = User{
				TelegramID: telegramID,
				State:      stateInitial,
				Status:     statusNew,
			}
			if err := db.Create(&user).Error; err != nil {
				return nil, err
			}
		} else {
			return nil, err
		}
	}
	return &user, nil
}

func updateUser(db *gorm.DB, user *User) {
	if err := db.Save(user).Error; err != nil {
		log.Printf("Error updating user: %s", err)
	}
}
